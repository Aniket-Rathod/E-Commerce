{"ast":null,"code":"import axios from \"axios\";\nimport { AIP_BASE_URL } from \"../../config/apiConfig\";\nimport { GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\";\n\n// Register Request Handling\nconst registerRequest = () => ({\n  type: REGISTER_REQUEST\n});\nconst registerSuccess = user => ({\n  type: REGISTER_SUCCESS,\n  payload: user\n});\nconst registerFailure = error => ({\n  type: REGISTER_FAILURE,\n  payload: error\n});\nexport const register = userData => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post(`${AIP_BASE_URL}/auth/signup`, userData);\n    const data = response.data;\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n    }\n    dispatch(registerSuccess(data));\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch(registerFailure(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n  }\n};\n\n// Login Request Handling\nconst loginRequest = () => ({\n  type: LOGIN_REQUEST\n});\nconst loginSuccess = user => ({\n  type: LOGIN_SUCCESS,\n  payload: user\n});\nconst loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\nexport const login = userData => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post(`${AIP_BASE_URL}/auth/signin`, userData);\n    const data = response.data;\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n    }\n    dispatch(loginSuccess(data));\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch(loginFailure(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n  }\n};\n\n// Get User Profile\nconst getUserRequest = () => ({\n  type: GET_USER_REQUEST\n});\nconst getUserSuccess = user => ({\n  type: GET_USER_SUCCESS,\n  payload: user\n});\nconst getUserFailure = error => ({\n  type: GET_USER_FAILURE,\n  payload: error\n});\nexport const getUser = jwt => async dispatch => {\n  dispatch(getUserRequest());\n  try {\n    const response = await axios.get(`${AIP_BASE_URL}/api/users/profile`, {\n      headers: {\n        \"Authorization\": `Bearer ${jwt}`\n      }\n    });\n    const user = response.data;\n    dispatch(getUserSuccess(user));\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    dispatch(getUserFailure(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message));\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwt\");\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","AIP_BASE_URL","GET_USER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT","REGISTER_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","registerRequest","type","registerSuccess","user","payload","registerFailure","error","register","userData","dispatch","response","post","data","jwt","localStorage","setItem","_error$response","_error$response$data","message","loginRequest","loginSuccess","loginFailure","login","_error$response2","_error$response2$data","getUserRequest","getUserSuccess","getUserFailure","getUser","get","headers","_error$response3","_error$response3$data","logout","removeItem"],"sources":["C:/Users/ASUS/Desktop/Programming/Internship - Archer IT/Web Application/E-Commerce/frontend/src/State/Auth/Action.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { AIP_BASE_URL } from \"../../config/apiConfig\"\r\nimport {\r\n  GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS,\r\n  LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS\r\n} from \"./ActionType\"\r\n\r\n// Register Request Handling\r\nconst registerRequest = () => ({ type: REGISTER_REQUEST });\r\nconst registerSuccess = (user) => ({ type: REGISTER_SUCCESS, payload: user });\r\nconst registerFailure = (error) => ({ type: REGISTER_FAILURE, payload: error });\r\n\r\nexport const register = (userData) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(`${AIP_BASE_URL}/auth/signup`, userData);\r\n    const data = response.data;\r\n\r\n    if (data.jwt) {\r\n      localStorage.setItem(\"jwt\", data.jwt);\r\n    }\r\n\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerFailure(error.response?.data?.message || error.message));\r\n  }\r\n};\r\n\r\n// Login Request Handling\r\nconst loginRequest = () => ({ type: LOGIN_REQUEST });\r\nconst loginSuccess = (user) => ({ type: LOGIN_SUCCESS, payload: user });\r\nconst loginFailure = (error) => ({ type: LOGIN_FAILURE, payload: error });\r\n\r\nexport const login = (userData) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post(`${AIP_BASE_URL}/auth/signin`, userData);\r\n    const data = response.data;\r\n\r\n    if (data.jwt) {\r\n      localStorage.setItem(\"jwt\", data.jwt);\r\n    }\r\n\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginFailure(error.response?.data?.message || error.message));\r\n  }\r\n};\r\n\r\n// Get User Profile\r\nconst getUserRequest = () => ({ type: GET_USER_REQUEST });\r\nconst getUserSuccess = (user) => ({ type: GET_USER_SUCCESS, payload: user });\r\nconst getUserFailure = (error) => ({ type: GET_USER_FAILURE, payload: error });\r\n\r\nexport const getUser = (jwt) => async (dispatch) => {\r\n  dispatch(getUserRequest());\r\n  try {\r\n    const response = await axios.get(`${AIP_BASE_URL}/api/users/profile`, {\r\n      headers: { \"Authorization\": `Bearer ${jwt}` }\r\n    });\r\n    const user = response.data;\r\n    dispatch(getUserSuccess(user));\r\n  } catch (error) {\r\n    dispatch(getUserFailure(error.response?.data?.message || error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwt\");\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}